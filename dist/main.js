!function(Q){var F={};function U(B){if(F[B])return F[B].exports;var n=F[B]={i:B,l:!1,exports:{}};return Q[B].call(n.exports,n,n.exports,U),n.l=!0,n.exports}U.m=Q,U.c=F,U.d=function(Q,F,B){U.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:B})},U.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},U.t=function(Q,F){if(1&F&&(Q=U(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(U.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)U.d(B,n,function(F){return Q[F]}.bind(null,n));return B},U.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return U.d(F,"a",F),F},U.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},U.p="",U(U.s=1)}([function(module,exports,__webpack_require__){eval('module.exports = function() {\n  return new Worker(__webpack_require__.p + "b6fec1c1d8b05b464053.worker.js");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS5qcz9jZjY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esb0JBQW9CLHFCQUF1QjtBQUMzQyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBXb3JrZXIoX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImI2ZmVjMWMxZDhiMDViNDY0MDUzLndvcmtlci5qc1wiKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(Q,F,U){Q.exports=U(2)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/canvasCommon.js\n\n\n\n\n\nfunction writeStatus(ctx, text) {\n  ctx.clearRect(0, canvasSize.y - 40, 400, 30);\n  ctx.fillText(text, 10, canvasSize.y - 20);\n}\n\nfunction resetCanvas(context, canvas, seed, seedSize) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.fillStyle = fillStyle;\n  context.arc(seed.x, seed.y, seedSize, 0, 2 * Math.PI);\n  context.fill();\n}\n\nvar messages = {\n  onClear: "Status: Cleared. Hit start to begin new simulation.",\n  onStart: "Status: Started. Simulation on the run.",\n  onPause: "Status: Paused. Hit start to continue simulation."\n};\n// EXTERNAL MODULE: ./node_modules/worker-loader/dist/cjs.js!./src/core.js\nvar core = __webpack_require__(0);\nvar core_default = /*#__PURE__*/__webpack_require__.n(core);\n\n// CONCATENATED MODULE: ./src/engine.js\n\n\n\n\n\n\nvar isStop = false;\nvar cdt;\nvar coreWorker;\nvar engine_status;\nvar isInit = false;\ncoreWorker = new core_default.a();\n\ncoreWorker.onmessage = function (e) {\n  if (isStop) return;\n  var partList = JSON.parse(e.data.part);\n\n  for (var i = 0; i < partList.length; i++) {\n    drawPixel(partList[i], cdt, canvasSize);\n  }\n\n  updateCanvas(main_context, cdt);\n  document.getElementById("pts").innerHTML = e.data.aggregatedParticlesCount;\n  document.getElementById("size").innerHTML = e.data.currentMaxRadius;\n  if (e.data.fd !== undefined) document.getElementById("fdim").innerHTML = (Math.round(e.data.fd * 1000) / 1000).toString();\n\n  if (!isStop) {\n    if (simulationParameters.isParamsChanged) {\n      coreWorker.postMessage([\'paramsUpdate\', simulationParameters]);\n      simulationParameters.isParamsChanged = false;\n    }\n\n    coreWorker.postMessage(\'continue\');\n  }\n};\n\nfunction start() {\n  if (!isInit) {\n    cdt = main_context.getImageData(0, 0, canvasSize.x, canvasSize.y);\n    coreWorker.postMessage(\'init\');\n    coreWorker.postMessage([\'init\', {\n      seed: main_seed,\n      canvasSize: canvasSize\n    }]);\n    coreWorker.postMessage([\'paramsUpdate\', simulationParameters]);\n\n    if (simulationParameters.isParamsChanged) {\n      coreWorker.postMessage([\'paramsUpdate\', simulationParameters]);\n      simulationParameters.isParamsChanged = false;\n    }\n\n    isInit = true;\n  }\n\n  isStop = false;\n  coreWorker.postMessage(\'start\');\n  engine_status = messages.onStart;\n}\n\nfunction stopAndClearCanvas() {\n  coreWorker.postMessage(\'stop\');\n  isStop = true;\n  resetCanvas(main_context, main_canvas, main_seed, main_seedSize);\n  engine_status = messages.onClear;\n  writeStatus(main_context, engine_status);\n  document.getElementById("pts").innerHTML = \'0\';\n  document.getElementById("size").innerHTML = \'0\';\n  document.getElementById("fdim").innerHTML = "-";\n  cdt = main_context.getImageData(0, 0, canvasSize.x, canvasSize.y);\n}\n\nfunction pause() {\n  coreWorker.postMessage(\'pause\');\n  isStop = true;\n  engine_status = messages.onPause;\n  writeStatus(main_context, engine_status);\n}\n\nfunction drawPixel(point, canvasData, canvasSize) {\n  var index = (point.x + point.y * canvasSize.x) * 4;\n  canvasData.data[index + 0] = 255;\n  canvasData.data[index + 3] = 255;\n}\n\nfunction updateCanvas(ctx, canvasData) {\n  ctx.putImageData(canvasData, 0, 0);\n  writeStatus(ctx, engine_status);\n}\n// CONCATENATED MODULE: ./src/commonClasses.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Point =\n/*#__PURE__*/\nfunction () {\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: "copy",\n    value: function copy(pt) {\n      this.x = pt.x;\n      this.y = pt.y;\n    }\n  }, {\n    key: "sum",\n    value: function sum(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n    }\n  }, {\n    key: "distanceSquare",\n    value: function distanceSquare(pt) {\n      var dx = this.x - pt.x;\n      var dy = this.y - pt.y;\n      return dx * dx + dy * dy;\n    }\n  }, {\n    key: "distance",\n    value: function distance(pt) {\n      return Math.floor(Math.sqrt(this.distanceSquare(pt)));\n    }\n  }]);\n\n  return Point;\n}();\n// CONCATENATED MODULE: ./src/rand.js\n\n\n\n\nvar randBufferSize = 100000;\nvar currentRand = 0;\nvar randNum = Array(randBufferSize);\nvar unitJump = 1;\n\nfunction initRandNum() {\n  for (var i = 0; i < randBufferSize; i++) {\n    randNum[i] = Math.random();\n  }\n}\n\nfunction getRandUniformBool() {\n  if (currentRand > randBufferSize - 1) currentRand = -1;\n  currentRand++;\n  return randNum[currentRand];\n}\n\nfunction getRandUniformRadian() {\n  return getRandUniformBool() * Math.PI * 2.0;\n}\n\nfunction getRandUniformCircularPosition(radius, seed) {\n  var randRadian = getRandUniformRadian();\n  return new Point(Math.floor(radius * Math.cos(randRadian)) + seed.x, Math.floor(radius * Math.sin(randRadian)) + seed.y);\n}\n\nfunction getHorizontalRandJump(horizontalDrift) {\n  if (getRandUniformBool() > horizontalDrift) return unitJump;else return -unitJump;\n}\n\nfunction getVerticalRandJump(verticalDrift) {\n  if (getRandUniformBool() > verticalDrift) return unitJump;else return -unitJump;\n}\n\nfunction getRandJump(horizontalDrift, verticalDrift) {\n  var jump = new Point(0, 0);\n\n  if (getRandUniformBool() < 0.5) {\n    jump.x = getHorizontalRandJump(horizontalDrift);\n  } else {\n    jump.y = getVerticalRandJump(verticalDrift);\n  }\n\n  return jump;\n}\n// CONCATENATED MODULE: ./src/main.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "context", function() { return main_context; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvas", function() { return main_canvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return canvasSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seed", function() { return main_seed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seedSize", function() { return main_seedSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simulationParameters", function() { return simulationParameters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fillStyle", function() { return fillStyle; });\n\n\n\n\n\n\nvar defaultDrift = 0.5;\nvar defaultStickProbability = 1;\nvar main_seedSize = 3;\nvar fillStyle = \'rgba(255, 0, 0, 255)\';\nvar font = "15px Arial";\nvar main_canvas;\nvar main_context;\nvar canvasSize;\nvar main_seed;\nvar simulationParameters = {\n  isParamsChanged: false,\n  aggregationProbability: defaultStickProbability,\n  driftVertical: defaultDrift,\n  driftHorizontal: defaultDrift\n};\n\ndocument.addEventListener("DOMContentLoaded", init);\n\nfunction init() {\n  main_canvas = document.getElementById("canvas");\n  canvasSize = new Point(main_canvas.width, main_canvas.height);\n  main_seed = new Point(Math.floor(Math.floor(canvasSize.x / 2)), Math.floor(canvasSize.y / 2));\n  main_context = main_canvas.getContext("2d");\n  main_context.fillStyle = fillStyle;\n  main_context.font = font;\n  resetCanvas(main_context, main_canvas, main_seed, main_seedSize, main_seedSize);\n  writeStatus(main_context, messages.onClear);\n  initRandNum();\n  addHandlers();\n}\n\nfunction addHandlers() {\n  var handlers = [];\n  handlers.push({\n    id: "driftVertical",\n    type: "input",\n    fun: setParameter\n  });\n  handlers.push({\n    id: "driftVertical",\n    type: "dblclick",\n    fun: resetParameter\n  });\n  handlers.push({\n    id: "driftHorizontal",\n    type: "input",\n    fun: setParameter\n  });\n  handlers.push({\n    id: "driftHorizontal",\n    type: "dblclick",\n    fun: resetParameter\n  });\n  handlers.push({\n    id: "aggregationProbability",\n    type: "input",\n    fun: setParameter\n  });\n  handlers.push({\n    id: "btn-start",\n    type: "click",\n    fun: start\n  });\n  handlers.push({\n    id: "btn-pause",\n    type: "click",\n    fun: pause\n  });\n  handlers.push({\n    id: "btn-clear",\n    type: "click",\n    fun: stopAndClearCanvas\n  });\n  handlers.forEach(function (handle) {\n    document.getElementById(handle.id).addEventListener(handle.type, handle.fun);\n  });\n}\n\nfunction setParameter() {\n  simulationParameters[this.id] = doParameterChange(this.id, this.id + \'Value\');\n}\n\nfunction resetParameter() {\n  simulationParameters[this.id] = doParameterToDefault(this.id, this.id + \'Value\');\n}\n\nfunction doParameterChange(sliderId, sliderOutputId) {\n  var slider = document.getElementById(sliderId);\n  var output = document.getElementById(sliderOutputId);\n  output.innerHTML = slider.value;\n  simulationParameters.isParamsChanged = true;\n  return slider.value;\n}\n\nfunction doParameterToDefault(sliderId, sliderOutputId) {\n  var slider = document.getElementById(sliderId);\n  var output = document.getElementById(sliderOutputId);\n  output.innerHTML = defaultDrift.toString();\n  simulationParameters.isParamsChanged = true;\n  slider.value = defaultDrift;\n  return defaultDrift;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}]);