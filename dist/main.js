!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var n=F[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,B),n.l=!0,n.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var n in Q)B.d(U,n,function(F){return Q[F]}.bind(null,n));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=1)}([function(module,exports,__webpack_require__){eval('module.exports = function() {\n  return new Worker(__webpack_require__.p + "7ba221592ccecc46794d.worker.js");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS5qcz9jZjY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esb0JBQW9CLHFCQUF1QjtBQUMzQyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBXb3JrZXIoX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjdiYTIyMTU5MmNjZWNjNDY3OTRkLndvcmtlci5qc1wiKTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(Q,F,B){Q.exports=B(2)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/worker-loader/dist/cjs.js!./src/core.js\nvar core = __webpack_require__(0);\nvar core_default = /*#__PURE__*/__webpack_require__.n(core);\n\n// CONCATENATED MODULE: ./src/engine.js\n\n\n\n\n\nvar seedSize = 2;\nvar isStop = false;\nvar cdt;\nvar coreWorker;\nvar engine_status;\nvar isInit = false;\ncoreWorker = new core_default.a();\n\ncoreWorker.onmessage = function (e) {\n  if (isStop) return;\n  var partList = JSON.parse(e.data.part);\n\n  for (var i = 0; i < partList.length; i++) {\n    drawPixel(partList[i], 255, 0, 0, 255, cdt, canvasSize);\n  }\n\n  updateCanvas(context, cdt); // console.log(e.data.aggregatedParticlesCount);\n\n  document.getElementById("pts").innerHTML = e.data.aggregatedParticlesCount;\n  document.getElementById("size").innerHTML = e.data.currentMaxRadius;\n  if (e.data.fd !== undefined) document.getElementById("fdim").innerHTML = (Math.round(e.data.fd * 1000) / 1000).toString();\n\n  if (!isStop) {\n    if (simulationParameters.isParamsChanged) {\n      coreWorker.postMessage([\'paramsUpdate\', simulationParameters]);\n      simulationParameters.isParamsChanged = false;\n    }\n\n    coreWorker.postMessage(\'continue\');\n  }\n};\n\nfunction start() {\n  if (!isInit) {\n    cdt = context.getImageData(0, 0, canvasSize.x, canvasSize.y);\n    coreWorker.postMessage(\'init\');\n\n    if (simulationParameters.isParamsChanged) {\n      coreWorker.postMessage([\'paramsUpdate\', simulationParameters]);\n      simulationParameters.isParamsChanged = false;\n    }\n\n    isInit = true;\n  }\n\n  isStop = false;\n  coreWorker.postMessage(\'start\');\n  engine_status = "Status: Started. Simulation on the run.";\n}\n\nfunction stopAndClearCanvas() {\n  coreWorker.postMessage(\'stop\');\n  isStop = true;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  engine_status = "Status: Cleared. Hit start to begin new simulation.";\n  writeStatus(context, engine_status);\n  context.fillStyle = \'rgba(255, 0, 0, 255)\';\n  context.arc(main_seed.x, main_seed.y, seedSize, 0, 2 * Math.PI);\n  context.fill();\n  document.getElementById("pts").innerHTML = \'0\';\n  document.getElementById("size").innerHTML = \'0\';\n  document.getElementById("fdim").innerHTML = "-";\n  cdt = context.getImageData(0, 0, canvasSize.x, canvasSize.y);\n}\n\nfunction pause() {\n  coreWorker.postMessage(\'pause\');\n  isStop = true;\n  engine_status = "Status: Paused. Hit start to continue simulation.";\n  writeStatus(context, engine_status);\n}\n\nfunction drawPixel(point, r, g, b, a, canvasData, canvasSize) {\n  var index = (point.x + point.y * canvasSize.x) * 4;\n  canvasData.data[index + 0] = r;\n  canvasData.data[index + 1] = g;\n  canvasData.data[index + 2] = b;\n  canvasData.data[index + 3] = a;\n}\n\nfunction updateCanvas(ctx, canvasData) {\n  ctx.putImageData(canvasData, 0, 0);\n  writeStatus(ctx, engine_status);\n}\n// CONCATENATED MODULE: ./src/commonClasses.js\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Point =\n/*#__PURE__*/\nfunction () {\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Point, [{\n    key: "add",\n    value: function add(pt) {\n      this.x += pt.x;\n      this.y += pt.y;\n    }\n  }, {\n    key: "addPair",\n    value: function addPair(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }, {\n    key: "subs",\n    value: function subs(pt) {\n      this.x -= pt.x;\n      this.y -= pt.y;\n    }\n  }, {\n    key: "copy",\n    value: function copy(pt) {\n      this.x = pt.x;\n      this.y = pt.y;\n    }\n  }, {\n    key: "copyPair",\n    value: function copyPair(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: "sum",\n    value: function sum(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n    }\n  }, {\n    key: "distanceSquare",\n    value: function distanceSquare(pt) {\n      var dx = this.x - pt.x;\n      var dy = this.y - pt.y;\n      return dx * dx + dy * dy;\n    }\n  }, {\n    key: "distance",\n    value: function distance(pt) {\n      return Math.floor(Math.sqrt(this.distanceSquare(pt)));\n    }\n  }]);\n\n  return Point;\n}();\n// CONCATENATED MODULE: ./src/rand.js\n\n\n\n\nvar randBufferSize = 100000;\nvar currentRand = 0;\nvar randNum = Array(randBufferSize);\nvar unitJump = 1;\n\nfunction initRandNum() {\n  for (var i = 0; i < randBufferSize; i++) {\n    randNum[i] = Math.random();\n  }\n}\n\nfunction getRandUniformBool() {\n  if (currentRand > randBufferSize - 1) currentRand = -1;\n  currentRand++;\n  return randNum[currentRand];\n}\n\nfunction getRandUniformRadian() {\n  return getRandUniformBool() * Math.PI * 2.0;\n}\n\nfunction getRandUniformCircularPosition(radius, seed) {\n  var randRadian = getRandUniformRadian();\n  return new Point(Math.floor(radius * Math.cos(randRadian)) + seed.x, Math.floor(radius * Math.sin(randRadian)) + seed.y);\n}\n\nfunction getHorizontalRandJump(horizontalDrift) {\n  if (getRandUniformBool() > horizontalDrift) return unitJump;else return -unitJump;\n}\n\nfunction getVerticalRandJump(verticalDrift) {\n  if (getRandUniformBool() > verticalDrift) return unitJump;else return -unitJump;\n}\n\nfunction getRandJump(horizontalDrift, verticalDrift) {\n  var jump = new Point(0, 0);\n\n  if (getRandUniformBool() < 0.5) {\n    jump.x = getHorizontalRandJump(horizontalDrift);\n  } else {\n    jump.y = getVerticalRandJump(verticalDrift);\n  }\n\n  return jump;\n}\n// CONCATENATED MODULE: ./src/main.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "context", function() { return context; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvas", function() { return canvas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return canvasSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "seed", function() { return main_seed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simulationParameters", function() { return simulationParameters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxAggregateRadius", function() { return maxAggregateRadius; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writeStatus", function() { return writeStatus; });\n\n\n\n\n\nvar defaultDrift = 0.5;\nvar defaultStickProbability = 1;\nvar canvas;\nvar context;\nvar canvasSize = new Point(0, 0);\nvar main_seed = new Point(0, 0);\nvar maxAggregateRadius;\nvar simulationParameters = {\n  isParamsChanged: false,\n  stickProbability: defaultStickProbability,\n  verticalDrift: defaultDrift,\n  horizontalDrift: defaultDrift\n};\n\ndocument.addEventListener("DOMContentLoaded", init);\n\nfunction init() {\n  canvas = document.getElementById("canvas");\n  canvasSize.x = canvas.width;\n  canvasSize.y = canvas.height;\n  main_seed.x = Math.floor(canvasSize.x / 2);\n  main_seed.y = Math.floor(canvasSize.y / 2);\n  context = canvas.getContext("2d");\n  context.fillStyle = \'rgba(255, 0, 0, 255)\';\n  context.clearRect(0, 0, canvasSize.x, canvasSize.y);\n  context.arc(canvasSize.x / 2, canvasSize.y / 2, 3, 0, 2 * Math.PI);\n  context.fill();\n  context.font = "15px Arial";\n  writeStatus(context, "Status: Cleared. Hit start to begin new simulation.");\n  maxAggregateRadius = Math.floor(Math.sqrt(canvasSize.x * canvasSize.x + canvasSize.y * canvasSize.y));\n  initRandNum();\n  addHandlers();\n}\n\nfunction addHandlers() {\n  document.getElementById("driftVertical").addEventListener("input", setDriftVertical);\n  document.getElementById("driftVertical").addEventListener("dblclick", resetDriftVertical);\n  document.getElementById("driftHorizontal").addEventListener("input", setDriftHorizontal);\n  document.getElementById("driftHorizontal").addEventListener("dblclick", resetDriftHorizontal);\n  document.getElementById("aggregationProbability").addEventListener("input", setAggregationProbability);\n  document.getElementById("btn-start").addEventListener("click", start);\n  document.getElementById("btn-pause").addEventListener("click", pause);\n  document.getElementById("btn-clear").addEventListener("click", stopAndClearCanvas);\n}\n\nfunction setAggregationProbability() {\n  var slider = document.getElementById("aggregationProbability");\n  var output = document.getElementById("aggregationProbabilityValue");\n  output.innerHTML = slider.value;\n  simulationParameters.stickProbability = slider.value;\n  simulationParameters.isParamsChanged = true;\n}\n\nfunction setDriftHorizontal() {\n  var slider = document.getElementById("driftHorizontal");\n  var output = document.getElementById("driftHorizontalValue");\n  output.innerHTML = slider.value;\n  simulationParameters.horizontalDrift = slider.value;\n  simulationParameters.isParamsChanged = true;\n}\n\nfunction setDriftVertical() {\n  var slider = document.getElementById("driftVertical");\n  var output = document.getElementById("driftVerticalValue");\n  output.innerHTML = slider.value;\n  simulationParameters.verticalDrift = slider.value;\n  simulationParameters.isParamsChanged = true;\n}\n\nfunction resetDriftVertical() {\n  var slider = document.getElementById("driftVertical");\n  var output = document.getElementById("driftVerticalValue");\n  output.innerHTML = defaultDrift;\n  simulationParameters.verticalDrift = defaultDrift;\n  simulationParameters.isParamsChanged = true;\n  slider.value = defaultDrift;\n}\n\nfunction resetDriftHorizontal() {\n  var slider = document.getElementById("driftHorizontal");\n  var output = document.getElementById("driftHorizontalValue");\n  output.innerHTML = defaultDrift;\n  simulationParameters.verticalDrift = defaultDrift;\n  simulationParameters.isParamsChanged = true;\n  slider.value = defaultDrift;\n}\n\nfunction writeStatus(ctx, text) {\n  ctx.clearRect(0, 760, 400, 30);\n  ctx.fillText(text, 10, 780);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}]);